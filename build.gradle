buildscript {
  ext {
    springBootVersion = '1.5.8.RELEASE'
  }
  repositories {
    maven { url 'https://plugins.gradle.org/m2/' }
    mavenCentral()
  }
  dependencies {
    classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
  }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'


group = 'com.koval'
version = '0.0.1'
sourceCompatibility = 1.8

repositories {
  mavenCentral()
}

dependencies {
  compile 'org.springframework.boot:spring-boot-starter-web',
          project(':connector'),
          project(':classifier')
          //'org.slf4j:slf4j-simple:1.7.25',
          //'org.slf4j:slf4j-api:1.7.25'
  testCompile 'org.springframework.boot:spring-boot-starter-test'
}

apply plugin: 'checkstyle'
checkstyle {
  configFile = rootProject.file('config/checkstyle.xml')
  toolVersion = '6.17'
  ignoreFailures = false
}

// Despite ignoreFailures=false, the build wonby default 't fail on CheckStyle warnings
// https://issues.gradle.org/browse/GRADLE-2888
tasks.withType(Checkstyle).each { checkstyleTask ->
  checkstyleTask.doLast {
    reports.all { report ->
      def outputFile = report.destination
      if (outputFile.exists() && outputFile.text.contains("<error ")) {
        throw new GradleException("Found checkstyle issues in $outputFile")
      }
    }
  }
}

apply plugin: 'pmd'
pmd {
  ruleSetFiles = rootProject.files('config/pmd.xml')
  toolVersion = '5.4.1'
  ignoreFailures = false
}

apply plugin: 'findbugs'
findbugs {
  toolVersion = '3.0.1'
  excludeFilter = rootProject.file('config/findbugs_filter.xml')
  ignoreFailures = false
}

tasks.withType(FindBugs) {
  reports {
    xml.enabled = false
    html.enabled = true
  }
}